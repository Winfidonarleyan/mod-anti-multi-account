YHOOL - Anti-Multi Account (System)

Table of Contents

1 CONCEPT
2 THINGS TO REMEMBER
3 CORE MODIFICATIONS
3.1 Zones where players stay the most
3.2 Total time played on the ACCOUNT
3.3 Autoban at random intervals function
4 CHECKS TO PERFORM
4.1 Total time played on the ACCOUNT
4.2 Zones analysis
4.2.1 If a character always stay in the same zone.
4.2.2 Which zones the character has visited/discovered
4.3 Gear evaluation
4.4 Spells evaluation
4.5 Skills evaluation
4.6 Talents evaluation
4.7 Friend list evaluation
4.8 Quest evaluation
4.9 Achievement evaluation
4.10 Money evaluation
4.11 Honor evaluation
4.12 Average play session time
4.13 Creation date
4.13.1 Account creation date
4.13.2 Character creation date
4.14 Account activity
4.15 New account or not
4.16 IP
5 CONFIGURATION FILE
5.1 Check options
5.2 Other options
6 CHECKS HISTORY
6.1 Database table
6.1.1 Structure
6.2 Conditions
6.2.1 If player_rating < AMAS.SuspiciousAccount.MinPoints
6.2.2 If player_rating >= AMAS.SuspiciousAccount.MinPoints
6.2.3 When we remove a character
7 GM commands
7.1 .amas
7.2 .amas list
7.3 .amas zone
7.4 .amas comment
7.4.1 Commands
7.4.2 Table structure
7.5 .amas info
7.5.1 Commands
7.5.2 .amas info #account_name
If GM Level = AMAS.LowGMLevel 
If GM Level = AMAS.MidGMLevel
If GM Level >= AMAS.HighGMLevel
7.6 .amas mail #account_name


1 CONCEPT

Detect multi account users because multi account completely ruins 
the immersion and the gameplay.

The system must perform checks on certain data and attribute a 
rating to the result (in the form of points).

The points should be easily configurable/tweakable in a config 
file or in the db.

After all checks have been done, an account which have a rating 
of 110 points means it's a highly suspicious account (suspected 
of multi account usage) and a warning is sent to GMs and stored 
in the DB. We might even automatically ban accounts with high 
rating but we wont tell the player the exact reasons of the ban 
of course.

If the account has a rating of 50, the account might be on watch.

If the account has a rating of 10 points, it probably is a normal 
account, so no problem.

We should find a formula for most checks to compare to an average 
or a predetermined value.

That's the idea.

2 THINGS TO REMEMBER

1. The server is YHOOL: http://yhool.gg

2. It has permanent death, so only 1 life

3. There is only one character per account on YHOOL.

4. There is no flight master actually, so can't check which 
  flight paths have been discovered.

5. Some skills are automatically learnt on character creation on 
  YHOOL (like defense, weapons and maybe later some crafting 
  skills).

6. There will also be another system which will prevent certain 
  things from being done on new accounts (or not very active 
  accounts) like sending mails, trading, yelling, speaking in 
  general chat etc...

7. I guess all these checks might affect performance but well 
  we'll see lol.

3 CORE MODIFICATIONS

3.1 Zones where players stay the most

Hm

3.2 Total time played on the ACCOUNT

Actually, it's calculated by querying ALL the characters played 
time together (I did not verify but I'm confident it is this 
way). It means that if a character is deleted, all the time 
played will disappear for this character. So we need to keep 
track of the time played on each character. There is a custom 
module for keeping achievement on the account instead of the 
character (by Conan) so I suppose it could serve as a base for 
this.

Shouldn't be hard anyway.

3.3 Autoban at random intervals function

I think we should have this function in the CORE directly because 
then we can call it for every module, script etc... It can be 
used for anticheat for example. It can be used for an anti spam 
script too. This is very useful because if the interval is 
random, the banned guy has no idea why he got banned.

So something like “RandomBan(interval_1,interval_2,ban_reason)” 
or “RandomBan(intervals,ban_reason)” and then in each script we 
can use it and change the interval as we want, and we replace by 
our own configuration interval if needed, and our own ban_reason. 
Default ban_reason = empty

This function can be public for all AC users.

4 CHECKS TO PERFORM

4.1 Total time played on the ACCOUNT

If a player has a low amount of time played on a character, it 
means it's a bank account/character certainly.

4.2 Zones analysis

4.2.1 If a character always stay in the same zone.

Especially in zones with banks and Auction Houses (capital 
cities, goblins cities and zones where I'll add a new AH).

Example:

Regularly store the position of a character in an array (every X 
minutes or everytime he changes from a big zone to another big 
zone), and when the character logs out, store it in the DB then 
calculate the most visited zone in the last X days and compare it 
to the total visited zones

4.2.2 Which zones the character has visited/discovered

If he has visited only the minimal amount of zones to reach the 
bank (we'll just test the path ourselves from the starting zone 
to orgrimmar or ratchet for example), he gets 10 points.

Might be a good idea to compare against the average amount of 
zones discovered by all players as well and give points depending 
on that.

In the Characters DB, in the table characters, in the column 
exploredZones.

4.3 Gear evaluation

If the character on the account has the base gear (from the 
starting vendors), no gear at all or always the same for a long 
period of time.

Maybe we can evaluate the gear with a gearscore calculation.

4.4 Spells evaluation

If the character has not trained all his spells. If he's lacking 
some spells or not training them at all.

4.5 Skills evaluation

If the character has not learned his profession skills (mining, 
leatherworking, engineering etc) or trained any skill (not even 
bandaging). If he's lacking some skills or not training them at 
all.

4.6 Talents evaluation

No talent point used = 5 points

If he has set his talents = 0 pts

4.7 Friend list evaluation

No friends = 5 points

Less than 3 friends = 3 points

Less than 5 friends = 2 points

Less than 10 friends = 1 point

4.8 Quest evaluation

No quest done = 10 points

Less than X quests done = Y points

4.9 Achievement evaluation

Same concept though I don't know much about achievements but it 
reflects the player's activity.

4.10 Money evaluation

If the character has a lot of gold on him (again needs to check 
against the average because it depends on the max level I'll set 
the server at).

4.11 Honor evaluation

No honor = no kills = 5 points

4.12 Average play session time

Check if the average play session time of the player is really 
short (example: 5 min). If it's very short, it means he is 
probably just sending items to his alt or doing other weird 
stuff.

Maybe there should be a cooldown in case of constant 
connection/disconnection (internet problem?).

4.13 Creation date

4.13.1 Account creation date

In the “account” table, there is the column “joindate”

This can be used as a check, if account is new, then it's 
suspicious.

4.13.2 Character creation date

I haven't found a way to check this but it could be added to the 
core directly too. It would also be helpful for another module of 
mine (a module that will evaluate if an account/character is new 
or not).

4.14 Account activity

If the user logs very rarely but “regularly” and only does a few 
actions, then it's probably a hidden mule = +10 pts

It is good against smarter people.

4.15 New account or not

This is a check that is relying on another module concept that I 
must write. This module will be a dependency on two or 3 other 
modules.

Basically, it will find out if an account is new or not (probably 
with point systems).

If it's new, then there will be +50 points here (configurable of 
course) or it will multiply some other check points by 2.

4.16 IP

If IP is used on multiple accounts, it will give a high rating 
because it's a huge warning (most of the time it will mean it's 
the same user but I know some students use the same network for 
example, or guys in the same family).

20 points.

5 CONFIGURATION FILE

5.1 Check options

All the checks are configurable, of course.

5.2 Other options

AMAS.SuspiciousAccount.MinPoints = 15

AMAS.ConfirmedMultiAccount.MinPoints = 100

AMAS.ConfirmedMultiAccount.Action = Ban|Warn GMs

## This is a random interval to ban the account between X,Y 
seconds. Reason = Multiple account

AMAS.ConfirmedMultiAccount.Action.Ban.RandomInterval = 
86440,172880 (1 - 2 days)

AMAS.ConfirmedMultiAccount.Action.Ban.Reason = “This account has 
been banned for using multiple accounts, which is against the 
rules of this server. Do it again and we will ban your IPs” (or 
empty)

AMAS.LowGMLevel = 1

AMAS.MidGMLevel = 2,3

AMAS.HighGMLevel = 4

AMAS.WarningInterval = 1800 (30 min by default)

Note: for the autoban at random interval, see 3.3

6 CHECKS HISTORY

6.1 Database table

If the history were stored in the auth database, it would be 
useful to verify what the player did on his previous characters. 
So it means we would evaluate if his account is new or old, but 
for that purpose, we will use another module instead 
(mod-new-player or smthg like that). That's why the AMAS history 
must be stored on the characters database and not on the 
account/auth database.

6.1.1 Structure

There must be the date when an entry is added to the history.

6.2 Conditions

6.2.1 If player_rating < AMAS.SuspiciousAccount.MinPoints

• DO NOT SAVE TO DB (saves resources and space).

6.2.2 If player_rating >= AMAS.SuspiciousAccount.MinPoints

• SAVE to DB when the character logs out (only one rating per 
  day, overwrites the previous rating if multiple log out per day 
  to save space). Or better, only ONCE PER DAY (to save resources 
  if possible).

• Send a message to GM with GM level >= AMAS.LowGMLevel to warn 
  them when the character enters the game. So the GM can spy on 
  the player and confirm or not

• Do the action in AMAS.ConfirmedMultiAccount.Action

6.2.3 When we remove a character

When a character is deleted, it should delete the related info 
from that table. Probably requires a new HOOK.

7 GM commands

7.1 .amas

• .amas -> list all subcommands below if NO PLAYER SELECTED

• .amas help -> list all subcommands below

7.2 .amas list

• .amas list -> list ALL suspicious account names + id (more than 
  AMAS.SuspiciousAccountMinPoints). They are separated by OFFLINE 
  and ONLINE

• .amas list online -> list only the ONLINE suspicious accounts 
  (more than AMAS.SuspiciousAccountMinPoints)

• .amas list offline -> list only the OFFLINE suspicious accounts 
  (more than AMAS.SuspiciousAccountMinPoints)

7.3 .amas zone

• .amas zone -> list all subcommands below

• .amas zone list -> list all suspicious zones

• .amas zone add -> add the current zone to the suspicious zone 
  table

• .amas zone delete -> delete the zone from the table

• .amas zone reload -> reload the table

7.4 .amas comment

7.4.1 Commands

• .amas comment -> list subcommands below

• .amas comment add #account_name #comment-> add extra comment 
  (for example if the GM thinks this account is NOT a multi 
  account). This only appends extra comment and when you press 
  enter, you see the result of the comment (so you can edit it if 
  it's wrong). 

• .amas comment delete #account_name -> delete comment

• .amas comment edit #account_name #comment -> delete the comment 
  and add your new comment (it's a mix of the two other commands)

7.4.2 Table structure

Add these columns in the player rating table: comment | 
comment_date | commenter_id | commenter_gm_lvl

comment = maybe a limit of characters (I don't remember the mySQL 
data types but i have done it several times), if you write a too 
long comment, the core tells you it's too long

comment_date = date in unixtime I guess

commenter_id = account_id of the gm

commenter_gm_lvl = gm level

7.5 .amas info

7.5.1 Commands

• .amas info help -> display subcommands (if there are)

• .amas info -> IF PLAYER SELECTED WITH THE MOUSE, show rating of 
  the selected player's account. IF PLAYER NOT SELECTED : show 
  rating of yourself

• .amas info #account_name -> show rating, see below

7.5.2 .amas info #account_name

There are different GM levels for this command, I know normally 
we must make 3 different commands but I feel like it's more 
practical this way for this particular case.

  If GM Level = AMAS.LowGMLevel 

Then show simple rating for that account.

Example:

Barbz: 100 pts

  If GM Level = AMAS.MidGMLevel

Then show detailed rating.

Example:

Barbz: 100 pts

--------------

Average Ilevel: 25

IP: xxx.xxx.xxx.xxx (Same as account: Winfi)

Friends: 1

Unused talents: 10

Money: 15000g (plz convert gold/silver/copper :P)

Completed Quests: 0

Total time played: 6h (plz convert to days/hours/min/sec, there 
is probably a function already done for that, maybe a native c++ 
function)

Zones discovered: 5

Honor/Kills: 0/0

Suspicious zones: yes (lol dunno for this one)

Average play session: 5m

Missing spells: 15

Profession learned: 2 (count because I can set the number in the 
worldserver.conf to 3/4/5/6 professions :P)

Comment: the comment? (if empty, then it's empty or written “no 
comment”)

Other missing checks??

  If GM Level >= AMAS.HighGMLevel

Then show detailed rating + points at the end, so no need to have 
a second command

Example:

Barbz: 100pts

--------------

Average Ilevel: 25 | 10pts

IP: xxx.xxx.xxx.xxx /!\ Same IP as account: Winfi | 10pts

Friends: 1 | 10pts

Unused talents: 10 | 10pts

Money: 15000g | 10pts

Completed Quests: 0 | 10pts

Total time played: 6h | 10pts

Zones discovered: 5 | 10pts

Honor/Kills: 0/0 | 10pts

Suspicious zones: yes (lol dunno for this one)

Average play session: 5m | 10pts

Missing spells: 15 | 10pts

Profession learned: 2 | 10pts (count because I can set the number 
in the worldserver.conf to 3/4/5/6 professions :P)

Comment: the comment? (if empty, then it's empty or written “no 
comment”)

Other missing checks??

7.6 .amas mail #account_name

For YHOOL, one of the main thing is to find “mule rerolls/alt 
mules” (characters created to store items in bank, mails, auction 
house etc). This command will display the list of all recipient 
he sent messages to (it can be quite long, I don't know if it 
will be practical to use).

This should be presented like this with the command .amas 
account_name mails :

recipient_name:

  money: number_of_mails_with_money

  item: number_of_mails_with_items

  only_text: number_of_mails_with_only_text

  auction_house: number_of_mails_received_from_auction_house

  account_name: acc_name

  account_id: acc_id

  IP: recipient_ip + notification if it's same IP (or very 
similar IP, like 192.168.0.0/24) as the email sender

Example:

barbz:

  money: 10

  item: 9

  only_text: 0

  auction_house: 25

  account_name: barbz

  account_id: 1

  IP: 192.168.0.1 (MATCH: same IP as sender)

